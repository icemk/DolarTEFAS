{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMeW661Ih4IROYNi6HV6szC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import plotly.express as px\n","import yfinance as yf\n","from datetime import datetime, timedelta\n","from tefas import Crawler\n","\n","###############################################################################\n","# 1) Generate Custom Date List\n","###############################################################################\n","def generate_date_list():\n","    \"\"\"\n","    Generate a list of dates starting from 2024-01-01 up to today in 60-day\n","    increments, skipping the consecutive day for the very first date, but adding\n","    consecutive days for all subsequent intervals. Also includes today's date.\n","    \"\"\"\n","    start_date = datetime.strptime(\"2024-01-01\", \"%Y-%m-%d\")\n","    end_date = datetime.today()\n","\n","    date_list = []\n","    current_date = start_date\n","    prev_date = None  # will store the previous 60-day date\n","\n","    while current_date < end_date:\n","        date_list.append(current_date.strftime(\"%Y-%m-%d\"))\n","\n","        # Skip adding the consecutive day for the *very first* date\n","        if prev_date and prev_date != start_date:\n","            consecutive_day = (prev_date + timedelta(days=1)).strftime(\"%Y-%m-%d\")\n","            date_list.append(consecutive_day)\n","\n","        prev_date = current_date\n","        current_date += timedelta(days=60)\n","\n","    # After the loop ends, add a +1 day after the *last* interval (if not first)\n","    if prev_date and prev_date != start_date:\n","        final_consecutive_day = (prev_date + timedelta(days=1)).strftime(\"%Y-%m-%d\")\n","        date_list.append(final_consecutive_day)\n","\n","    # Finally, append today's date\n","    date_list.append(datetime.today().strftime(\"%Y-%m-%d\"))\n","\n","    # Sort for a clean chronological order (and remove duplicates, if any)\n","    date_list = sorted(set(date_list))\n","    return date_list\n","\n","\n","###############################################################################\n","# 2) Fetch TEFAS Data in Pairs\n","###############################################################################\n","def fetch_tefas_data(date_list, fund_code):\n","    \"\"\"\n","    For every *pair* of dates in date_list, fetch TEFAS data for [start, end).\n","    Returns a single DataFrame.\n","    \"\"\"\n","    # NOTE: This requires that you have the TEFAS library or function 'tefas.fetch' installed or defined.\n","    # Example:\n","    #   from tefas import tefas\n","    # or you have a placeholder function with the same signature.\n","    tefas = Crawler()\n","    all_data = []\n","\n","    # Step through date_list in steps of 2: (0->1, 2->3, etc.)\n","    for i in range(0, len(date_list) - 1, 2):\n","        start = date_list[i]\n","        end = date_list[i + 1]\n","\n","        # Example TEFAS fetch call\n","        data = tefas.fetch(\n","            start=start,\n","            end=end,\n","            name=fund_code,\n","            columns=[\"code\", \"date\", \"price\"]\n","        )\n","        all_data.append(data)\n","\n","    # Combine all segments into a single DataFrame\n","    final_data = pd.concat(all_data, ignore_index=True)\n","\n","    # Convert date to datetime for proper sorting/merging\n","    final_data['date'] = pd.to_datetime(final_data['date'])\n","    final_data.sort_values(by='date', inplace=True, ignore_index=True)\n","    return final_data\n","\n","\n","###############################################################################\n","# 3) Fetch USD/TRY Data from Yahoo Finance\n","###############################################################################\n","def fetch_usdtry_data(date_list):\n","    \"\"\"\n","    Fetch daily USD/TRY rates (Close) from Yahoo Finance for the entire range\n","    from date_list[0] to date_list[-1] (inclusive).\n","    Returns a DataFrame with columns ['date', 'USDTRY_Close'].\n","    \"\"\"\n","    ticker = \"USDTRY=X\"\n","    start_dt = datetime.strptime(date_list[0], \"%Y-%m-%d\")\n","    end_dt = datetime.strptime(date_list[-1], \"%Y-%m-%d\")\n","\n","    # Add +1 day because yfinance excludes the end date\n","    end_dt += timedelta(days=1)\n","\n","    usdtry = yf.Ticker(ticker)\n","    usdtry_data = usdtry.history(\n","        start=start_dt.strftime(\"%Y-%m-%d\"),\n","        end=end_dt.strftime(\"%Y-%m-%d\")\n","    )\n","\n","    # Keep only the 'Close' column\n","    usdtry_close_df = usdtry_data[['Close']].reset_index()\n","\n","    # Rename columns for merging convenience\n","    usdtry_close_df.rename(columns={'Date': 'date', 'Close': 'USDTRY_Close'}, inplace=True)\n","\n","    # Convert date to datetime\n","    usdtry_close_df['date'] = pd.to_datetime(usdtry_close_df['date'])\n","    usdtry_close_df['date'] = usdtry_close_df['date'].dt.tz_localize(None)\n","\n","    return usdtry_close_df\n","\n","\n","###############################################################################\n","# 4) Merge TEFAS Data with USDTRY Data\n","###############################################################################\n","def merge_data(final_data, usdtry_close_df):\n","    \"\"\"\n","    Left-merge final_data (TEFAS) with usdtry_close_df (USDTRY rates) on 'date'.\n","    Returns a combined DataFrame.\n","    \"\"\"\n","    final_data_with_fx = pd.merge(\n","        final_data,\n","        usdtry_close_df,\n","        on='date',\n","        how='left'\n","    )\n","    return final_data_with_fx\n","\n","\n","###############################################################################\n","# 5) Compute USD Price and Relative Return\n","###############################################################################\n","def compute_usd_price_and_return(final_data_with_fx):\n","    \"\"\"\n","    1) USD_price = price / USDTRY_Close\n","    2) last_valid_usd_price is the last non-zero USD_price\n","    3) return_to_last = (last_valid_usd_price / USD_price) - 1\n","    \"\"\"\n","    # Compute USD price\n","    final_data_with_fx['USD_price'] = (\n","        final_data_with_fx['price'] / final_data_with_fx['USDTRY_Close']\n","    )\n","\n","    # Find the last valid (non-zero, non-NaN) USD_price\n","    valid_prices = final_data_with_fx.loc[\n","        (final_data_with_fx['USD_price'].notna()) & (final_data_with_fx['USD_price'] > 0),\n","        'USD_price'\n","    ]\n","\n","    if len(valid_prices) == 0:\n","        # Edge case: no valid USD_price\n","        final_data_with_fx['return_to_last'] = None\n","        return final_data_with_fx\n","\n","    last_valid_usd_price = valid_prices.iloc[-1]\n","\n","    # Compute relative return vs. last valid price\n","    final_data_with_fx['return_to_last'] = (\n","        last_valid_usd_price / final_data_with_fx['USD_price'] - 1\n","    )\n","\n","    # Round for clarity\n","    final_data_with_fx['USD_price'] = final_data_with_fx['USD_price'].round(4)\n","    final_data_with_fx['return_to_last'] = final_data_with_fx['return_to_last'].round(4)\n","\n","    return final_data_with_fx\n","\n","\n","###############################################################################\n","# 6) Plot with Plotly (Interactive Hover)\n","###############################################################################\n","def plot_return_bar(final_data_with_fx):\n","    \"\"\"\n","    Plot an interactive bar chart of 'return_to_last' vs. 'date' in Plotly.\n","    Hover shows date and return in percentage.\n","    \"\"\"\n","    # Extract fund code from first row (assuming consistent code in all rows)\n","    fund_code = final_data_with_fx['code'].iloc[0] if 'code' in final_data_with_fx.columns else 'Unknown Fund'\n","\n","    fig = px.bar(\n","        final_data_with_fx,\n","        x='date',\n","        y='return_to_last',\n","        labels={\n","            'date': 'Tarih',\n","            'return_to_last': 'Dolar Getirisi (%)'\n","        },\n","        title=f'{fund_code} Fonunun Alım Tarihlerine Göre Bugünkü Dolar Bazlı Getirisi',\n","        hover_data={'return_to_last': ':.2%'}  # Show return_to_last as percentage on hover\n","    )\n","\n","    # Format the y-axis as percentage\n","    fig.update_layout(\n","        yaxis_tickformat=\".0%\",\n","        xaxis_tickangle=-45\n","    )\n","\n","    fig.show()\n","\n","\n","###############################################################################\n","# 7) Main Workflow\n","###############################################################################\n","def main():\n","    # Prompt user for the fund code\n","    fund_code = input(\"Enter the TEFAS fund code: \")\n","\n","    # 1) Generate date_list\n","    date_list = generate_date_list()\n","\n","    # 2) Fetch TEFAS data\n","    final_data = fetch_tefas_data(date_list, fund_code=fund_code)\n","\n","    # 3) Fetch USD/TRY data\n","    usdtry_close_df = fetch_usdtry_data(date_list)\n","\n","    # 4) Merge\n","    final_data_with_fx = merge_data(final_data, usdtry_close_df)\n","\n","    # 5) Compute USD price and return\n","    final_data_with_fx = compute_usd_price_and_return(final_data_with_fx)\n","\n","    # 6) Plot bar chart with Plotly\n","    plot_return_bar(final_data_with_fx)\n","\n","\n","###############################################################################\n","# 8) Run the script if executed directly\n","###############################################################################\n","if __name__ == \"__main__\":\n","    main()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":559},"id":"VgGOK-xRZzgg","executionInfo":{"status":"ok","timestamp":1742538965130,"user_tz":-240,"elapsed":9223,"user":{"displayName":"Ismail Cem K.","userId":"09300280997246959440"}},"outputId":"f7885c68-7d50-4c8f-d9d9-bdaa06f07505"},"execution_count":5,"outputs":[{"name":"stdout","output_type":"stream","text":["Enter the TEFAS fund code: IIH\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"6b1768fd-70fd-4a88-a0d1-c0f49f5713dc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"6b1768fd-70fd-4a88-a0d1-c0f49f5713dc\")) {                    Plotly.newPlot(                        \"6b1768fd-70fd-4a88-a0d1-c0f49f5713dc\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Tarih=%{x}\\u003cbr\\u003eDolar Getirisi (%)=%{y:.2%}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"2024-01-02T00:00:00\",\"2024-01-03T00:00:00\",\"2024-01-04T00:00:00\",\"2024-01-05T00:00:00\",\"2024-01-08T00:00:00\",\"2024-01-09T00:00:00\",\"2024-01-10T00:00:00\",\"2024-01-11T00:00:00\",\"2024-01-12T00:00:00\",\"2024-01-15T00:00:00\",\"2024-01-16T00:00:00\",\"2024-01-17T00:00:00\",\"2024-01-18T00:00:00\",\"2024-01-19T00:00:00\",\"2024-01-22T00:00:00\",\"2024-01-23T00:00:00\",\"2024-01-24T00:00:00\",\"2024-01-25T00:00:00\",\"2024-01-26T00:00:00\",\"2024-01-29T00:00:00\",\"2024-01-30T00:00:00\",\"2024-01-31T00:00:00\",\"2024-02-01T00:00:00\",\"2024-02-02T00:00:00\",\"2024-02-05T00:00:00\",\"2024-02-06T00:00:00\",\"2024-02-07T00:00:00\",\"2024-02-08T00:00:00\",\"2024-02-09T00:00:00\",\"2024-02-12T00:00:00\",\"2024-02-13T00:00:00\",\"2024-02-14T00:00:00\",\"2024-02-15T00:00:00\",\"2024-02-16T00:00:00\",\"2024-02-19T00:00:00\",\"2024-02-20T00:00:00\",\"2024-02-21T00:00:00\",\"2024-02-22T00:00:00\",\"2024-02-23T00:00:00\",\"2024-02-26T00:00:00\",\"2024-02-27T00:00:00\",\"2024-02-28T00:00:00\",\"2024-02-29T00:00:00\",\"2024-03-01T00:00:00\",\"2024-03-04T00:00:00\",\"2024-03-05T00:00:00\",\"2024-03-06T00:00:00\",\"2024-03-07T00:00:00\",\"2024-03-08T00:00:00\",\"2024-03-11T00:00:00\",\"2024-03-12T00:00:00\",\"2024-03-13T00:00:00\",\"2024-03-14T00:00:00\",\"2024-03-15T00:00:00\",\"2024-03-18T00:00:00\",\"2024-03-19T00:00:00\",\"2024-03-20T00:00:00\",\"2024-03-21T00:00:00\",\"2024-03-22T00:00:00\",\"2024-03-25T00:00:00\",\"2024-03-26T00:00:00\",\"2024-03-27T00:00:00\",\"2024-03-28T00:00:00\",\"2024-03-29T00:00:00\",\"2024-04-01T00:00:00\",\"2024-04-02T00:00:00\",\"2024-04-03T00:00:00\",\"2024-04-04T00:00:00\",\"2024-04-05T00:00:00\",\"2024-04-08T00:00:00\",\"2024-04-09T00:00:00\",\"2024-04-16T00:00:00\",\"2024-04-17T00:00:00\",\"2024-04-18T00:00:00\",\"2024-04-19T00:00:00\",\"2024-04-22T00:00:00\",\"2024-04-24T00:00:00\",\"2024-04-25T00:00:00\",\"2024-04-26T00:00:00\",\"2024-04-29T00:00:00\",\"2024-04-30T00:00:00\",\"2024-05-02T00:00:00\",\"2024-05-03T00:00:00\",\"2024-05-06T00:00:00\",\"2024-05-07T00:00:00\",\"2024-05-08T00:00:00\",\"2024-05-09T00:00:00\",\"2024-05-10T00:00:00\",\"2024-05-13T00:00:00\",\"2024-05-14T00:00:00\",\"2024-05-15T00:00:00\",\"2024-05-16T00:00:00\",\"2024-05-17T00:00:00\",\"2024-05-20T00:00:00\",\"2024-05-21T00:00:00\",\"2024-05-22T00:00:00\",\"2024-05-23T00:00:00\",\"2024-05-24T00:00:00\",\"2024-05-27T00:00:00\",\"2024-05-28T00:00:00\",\"2024-05-29T00:00:00\",\"2024-05-30T00:00:00\",\"2024-05-31T00:00:00\",\"2024-06-03T00:00:00\",\"2024-06-04T00:00:00\",\"2024-06-05T00:00:00\",\"2024-06-06T00:00:00\",\"2024-06-07T00:00:00\",\"2024-06-10T00:00:00\",\"2024-06-11T00:00:00\",\"2024-06-12T00:00:00\",\"2024-06-13T00:00:00\",\"2024-06-14T00:00:00\",\"2024-06-20T00:00:00\",\"2024-06-21T00:00:00\",\"2024-06-24T00:00:00\",\"2024-06-25T00:00:00\",\"2024-06-26T00:00:00\",\"2024-06-27T00:00:00\",\"2024-06-28T00:00:00\",\"2024-07-01T00:00:00\",\"2024-07-02T00:00:00\",\"2024-07-03T00:00:00\",\"2024-07-04T00:00:00\",\"2024-07-05T00:00:00\",\"2024-07-08T00:00:00\",\"2024-07-09T00:00:00\",\"2024-07-10T00:00:00\",\"2024-07-11T00:00:00\",\"2024-07-12T00:00:00\",\"2024-07-17T00:00:00\",\"2024-07-18T00:00:00\",\"2024-07-19T00:00:00\",\"2024-07-22T00:00:00\",\"2024-07-23T00:00:00\",\"2024-07-24T00:00:00\",\"2024-07-25T00:00:00\",\"2024-07-26T00:00:00\",\"2024-07-29T00:00:00\",\"2024-07-30T00:00:00\",\"2024-07-31T00:00:00\",\"2024-08-01T00:00:00\",\"2024-08-02T00:00:00\",\"2024-08-05T00:00:00\",\"2024-08-06T00:00:00\",\"2024-08-07T00:00:00\",\"2024-08-08T00:00:00\",\"2024-08-09T00:00:00\",\"2024-08-12T00:00:00\",\"2024-08-13T00:00:00\",\"2024-08-14T00:00:00\",\"2024-08-15T00:00:00\",\"2024-08-16T00:00:00\",\"2024-08-19T00:00:00\",\"2024-08-20T00:00:00\",\"2024-08-21T00:00:00\",\"2024-08-22T00:00:00\",\"2024-08-23T00:00:00\",\"2024-08-26T00:00:00\",\"2024-08-27T00:00:00\",\"2024-08-28T00:00:00\",\"2024-08-29T00:00:00\",\"2024-09-02T00:00:00\",\"2024-09-03T00:00:00\",\"2024-09-04T00:00:00\",\"2024-09-05T00:00:00\",\"2024-09-06T00:00:00\",\"2024-09-09T00:00:00\",\"2024-09-10T00:00:00\",\"2024-09-11T00:00:00\",\"2024-09-12T00:00:00\",\"2024-09-13T00:00:00\",\"2024-09-16T00:00:00\",\"2024-09-17T00:00:00\",\"2024-09-18T00:00:00\",\"2024-09-19T00:00:00\",\"2024-09-20T00:00:00\",\"2024-09-23T00:00:00\",\"2024-09-24T00:00:00\",\"2024-09-25T00:00:00\",\"2024-09-26T00:00:00\",\"2024-09-27T00:00:00\",\"2024-09-30T00:00:00\",\"2024-10-01T00:00:00\",\"2024-10-02T00:00:00\",\"2024-10-03T00:00:00\",\"2024-10-04T00:00:00\",\"2024-10-07T00:00:00\",\"2024-10-08T00:00:00\",\"2024-10-09T00:00:00\",\"2024-10-10T00:00:00\",\"2024-10-11T00:00:00\",\"2024-10-14T00:00:00\",\"2024-10-15T00:00:00\",\"2024-10-16T00:00:00\",\"2024-10-17T00:00:00\",\"2024-10-18T00:00:00\",\"2024-10-21T00:00:00\",\"2024-10-22T00:00:00\",\"2024-10-23T00:00:00\",\"2024-10-24T00:00:00\",\"2024-10-25T00:00:00\",\"2024-10-28T00:00:00\",\"2024-10-30T00:00:00\",\"2024-10-31T00:00:00\",\"2024-11-01T00:00:00\",\"2024-11-04T00:00:00\",\"2024-11-05T00:00:00\",\"2024-11-06T00:00:00\",\"2024-11-07T00:00:00\",\"2024-11-08T00:00:00\",\"2024-11-11T00:00:00\",\"2024-11-12T00:00:00\",\"2024-11-13T00:00:00\",\"2024-11-14T00:00:00\",\"2024-11-18T00:00:00\",\"2024-11-19T00:00:00\",\"2024-11-20T00:00:00\",\"2024-11-21T00:00:00\",\"2024-11-22T00:00:00\",\"2024-11-25T00:00:00\",\"2024-11-26T00:00:00\",\"2024-11-27T00:00:00\",\"2024-11-28T00:00:00\",\"2024-11-29T00:00:00\",\"2024-12-02T00:00:00\",\"2024-12-03T00:00:00\",\"2024-12-04T00:00:00\",\"2024-12-05T00:00:00\",\"2024-12-06T00:00:00\",\"2024-12-09T00:00:00\",\"2024-12-10T00:00:00\",\"2024-12-11T00:00:00\",\"2024-12-12T00:00:00\",\"2024-12-13T00:00:00\",\"2024-12-16T00:00:00\",\"2024-12-17T00:00:00\",\"2024-12-18T00:00:00\",\"2024-12-19T00:00:00\",\"2024-12-20T00:00:00\",\"2024-12-23T00:00:00\",\"2024-12-24T00:00:00\",\"2024-12-25T00:00:00\",\"2024-12-26T00:00:00\",\"2024-12-27T00:00:00\",\"2024-12-30T00:00:00\",\"2024-12-31T00:00:00\",\"2025-01-02T00:00:00\",\"2025-01-03T00:00:00\",\"2025-01-06T00:00:00\",\"2025-01-07T00:00:00\",\"2025-01-08T00:00:00\",\"2025-01-09T00:00:00\",\"2025-01-10T00:00:00\",\"2025-01-13T00:00:00\",\"2025-01-14T00:00:00\",\"2025-01-15T00:00:00\",\"2025-01-16T00:00:00\",\"2025-01-17T00:00:00\",\"2025-01-20T00:00:00\",\"2025-01-21T00:00:00\",\"2025-01-22T00:00:00\",\"2025-01-23T00:00:00\",\"2025-01-24T00:00:00\",\"2025-01-27T00:00:00\",\"2025-01-28T00:00:00\",\"2025-01-29T00:00:00\",\"2025-01-30T00:00:00\",\"2025-01-31T00:00:00\",\"2025-02-03T00:00:00\",\"2025-02-04T00:00:00\",\"2025-02-05T00:00:00\",\"2025-02-06T00:00:00\",\"2025-02-07T00:00:00\",\"2025-02-10T00:00:00\",\"2025-02-11T00:00:00\",\"2025-02-12T00:00:00\",\"2025-02-13T00:00:00\",\"2025-02-14T00:00:00\",\"2025-02-17T00:00:00\",\"2025-02-18T00:00:00\",\"2025-02-19T00:00:00\",\"2025-02-20T00:00:00\",\"2025-02-21T00:00:00\",\"2025-02-24T00:00:00\",\"2025-02-25T00:00:00\",\"2025-02-26T00:00:00\",\"2025-02-27T00:00:00\",\"2025-02-28T00:00:00\",\"2025-03-03T00:00:00\",\"2025-03-04T00:00:00\",\"2025-03-05T00:00:00\",\"2025-03-06T00:00:00\",\"2025-03-07T00:00:00\",\"2025-03-10T00:00:00\",\"2025-03-11T00:00:00\",\"2025-03-12T00:00:00\",\"2025-03-13T00:00:00\",\"2025-03-14T00:00:00\",\"2025-03-17T00:00:00\",\"2025-03-18T00:00:00\",\"2025-03-19T00:00:00\",\"2025-03-20T00:00:00\"],\"xaxis\":\"x\",\"y\":[0.2681,0.2662,0.2983,0.2876,0.273,0.2574,0.2699,0.2463,0.2383,0.2197,0.2098,0.2097,0.1999,0.2021,0.2097,0.2079,0.2128,0.1893,0.1828,0.1628,0.1508,0.1474,0.1436,0.1283,0.1248,0.1235,0.1141,0.1179,0.1063,0.0952,0.0864,0.1087,0.1051,0.0873,0.087,0.0941,0.0792,0.0855,0.0907,0.0849,0.087,0.1043,0.1182,0.107,0.1244,0.1461,0.1515,0.1562,0.1236,0.114,0.1135,0.1163,0.1292,0.1373,0.1468,0.155,0.1348,0.1277,0.0968,0.0975,0.1127,0.1378,0.1383,0.1146,0.1005,0.0768,0.0807,0.0792,0.0468,0.0011,-0.0093,0.0075,0.0181,0.0123,0.0195,0.0016,-0.0005,-0.0156,-0.0175,-0.0347,-0.0574,-0.0633,-0.0687,-0.0798,-0.0832,-0.0918,-0.0851,-0.0939,-0.0983,-0.0861,-0.0925,-0.0988,-0.1076,-0.1336,-0.1425,-0.1535,-0.1531,-0.1494,-0.1428,-0.1476,-0.1482,-0.1381,-0.136,-0.1399,-0.1591,-0.1412,-0.1509,-0.1456,-0.1333,-0.1246,-0.1306,-0.1419,-0.16,-0.1658,-0.1785,-0.1851,-0.1783,-0.1751,-0.1663,-0.1774,-0.1832,-0.1678,-0.1781,-0.1896,-0.1954,-0.1933,-0.1963,-0.1885,-0.1892,-0.204,-0.2182,-0.2161,-0.2149,-0.2172,-0.2197,-0.2146,-0.2074,-0.1953,-0.1984,-0.1849,-0.1784,-0.1742,-0.1845,-0.1633,-0.1216,-0.1132,-0.1253,-0.1287,-0.1162,-0.1149,-0.1212,-0.1152,-0.1233,-0.1101,-0.1226,-0.1134,-0.1095,-0.1085,-0.0863,-0.0804,-0.0977,-0.0953,-0.1033,-0.1305,-0.1262,-0.1271,-0.1219,-0.1103,-0.1028,-0.1005,-0.0856,-0.092,-0.1025,-0.0933,-0.1034,-0.1045,-0.1188,-0.1141,-0.1119,-0.121,-0.1058,-0.1009,-0.0984,-0.0861,-0.0585,-0.0201,-0.0047,-0.0245,-0.0188,-0.0197,-0.0314,-0.0137,-0.0014,0.0194,0.0027,-0.0103,-0.0097,0.0197,0.0329,0.0111,0.0263,0.0133,0.0096,0.0063,-0.0043,0.0077,0.013,0.0376,0.0464,0.0162,0.0166,-0.0126,-0.0228,-0.02,-0.0304,-0.0427,-0.0367,-0.0267,-0.0117,-0.0409,-0.0608,-0.0655,-0.0664,-0.07,-0.0696,-0.0724,-0.0694,-0.0828,-0.0899,-0.0973,-0.1112,-0.1232,-0.1077,-0.1039,-0.1018,-0.107,-0.0967,-0.0977,-0.0889,-0.0709,-0.0645,-0.0544,-0.0689,-0.0857,-0.0871,-0.0969,-0.0877,-0.0862,-0.0938,-0.0976,-0.096,-0.0878,-0.08,-0.0901,-0.0844,-0.0649,-0.0633,-0.0636,-0.0733,-0.0886,-0.0928,-0.0921,-0.1046,-0.1047,-0.1048,-0.0922,-0.1035,-0.0993,-0.0961,-0.0918,-0.0719,-0.0733,-0.0648,-0.0722,-0.0797,-0.0718,-0.0736,-0.059,-0.0699,-0.067,-0.06,-0.0658,-0.0503,-0.0528,-0.0327,-0.0271,-0.0157,-0.0254,-0.0379,-0.031,-0.0576,-0.0608,-0.0828,-0.0957,-0.0972,-0.0833,-0.0811,-0.0955,-0.1082,-0.1203,-0.1211,-0.1137,0.0],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Tarih\"},\"tickangle\":-45},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Dolar Getirisi (%)\"},\"tickformat\":\".0%\"},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"IIH Fonunun Alım Tarihlerine Göre Bugünkü Dolar Bazlı Getirisi\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('6b1768fd-70fd-4a88-a0d1-c0f49f5713dc');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"wkS1wPjyZ9Ay"},"execution_count":null,"outputs":[]}]}